{"version":3,"file":"static/js/569.0a7b04e3.chunk.js","mappings":"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","sources":["webpack://foodietree_FE/./src/pages/customer/CustomerReservationDetailModal.module.scss?298a","components/payment/PaymentBtn.js","pages/customer/CustomerReservationDetailModal.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reservationDetailItem\":\"CustomerReservationDetailModal_reservationDetailItem__VEsb6\",\"imgSection\":\"CustomerReservationDetailModal_imgSection__hm2PT\",\"reservedProductImg\":\"CustomerReservationDetailModal_reservedProductImg__Tn1mk\",\"reservedStoreImg\":\"CustomerReservationDetailModal_reservedStoreImg__SkZET\",\"reservationTextInfo\":\"CustomerReservationDetailModal_reservationTextInfo__OyEQL\",\"btnDes\":\"CustomerReservationDetailModal_btnDes__e26Zy\",\"pickupConfirmBtn\":\"CustomerReservationDetailModal_pickupConfirmBtn__yxMXo\",\"paymentBtn\":\"CustomerReservationDetailModal_paymentBtn__8CCKi\",\"pickupCancelBtn\":\"CustomerReservationDetailModal_pickupCancelBtn__UYOyV\",\"needHelp\":\"CustomerReservationDetailModal_needHelp__fg0-n\"};","import React, {useState} from 'react';\nimport {useModal} from \"../../pages/common/ModalProvider\";\nimport PaymentRequestModal from \"../../pages/payment/PaymentRequestModal\";\nimport SubModalPortal from \"../../pages/payment/SubModalPortal\";\nimport styles from \"../../pages/customer/CustomerReservationDetailModal.module.scss\"\nimport {patchReservationFetch} from \"./fetch-payment\";\n\nconst ReservationBtn = ({ storeInfo }) => {\n    const [isShow, setIsShow] = useState(false);\n    const [paymentId, setPaymentId] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const { closeModal, openModal } = useModal();\n    const storeId = storeInfo?.storeId || '';\n    const price = storeInfo?.price;\n    const handleMakeReservation = async () => {\n        setIsLoading(true);\n        const tarId = `${storeInfo.productId}-${Date.now()}`;\n        setPaymentId(tarId);\n        try {\n            const response = await patchReservationFetch(tarId, storeInfo.reservationId);\n            const data = await response.json();\n            setIsLoading(false);\n            if (response.ok && data) {\n                setIsShow(true);\n            } else {\n                alert(\"결제 유효 시간이 지났습니다.\");\n                closeModal();\n                window.location.reload();\n            }\n        } catch (e) {\n            alert(\"잠시 후 다시 이용해주세요.\");\n            console.error(e);\n            setIsLoading(false);\n            setIsShow(false);\n        }\n    };\n\n    const closeHandler = () => {\n        setIsShow(false);\n        closeModal();\n    }\n    return (\n        <>\n            <button className={styles.paymentBtn} onClick={handleMakeReservation}>결제하기</button>\n            { isShow &&\n                <SubModalPortal onClose={closeHandler} isLoading={isLoading}>\n                    <PaymentRequestModal storeName={storeInfo.storeName} price={price} paymentId={paymentId} onClose={closeHandler}/>\n                </SubModalPortal>\n            }\n        </>\n    );\n};\n\nexport default ReservationBtn;","import React, {useState} from 'react';\nimport styles from \"./CustomerReservationDetailModal.module.scss\";\nimport {useModal} from \"../common/ModalProvider\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport {DEFAULT_IMG, imgErrorHandler} from \"../../utils/error\";\nimport ReservationBtn from \"../../components/payment/ReservationBtn\";\nimport PaymentBtn from \"../../components/payment/PaymentBtn\";\n\nconst CustomerReservationDetailModal = ({reservationDetail, onPickupConfirm, onCancelClick}) => {\n    const {closeModal} = useModal();\n    const navigate = useNavigate();\n    const handleConfirmPickUp = () => {\n        onPickupConfirm(reservationDetail.reservationId); // props로 받아온 함수 실행\n        alert('픽업이 확인되었습니다. 감사합니다.');\n        closeModal();\n        // 추후 리뷰 기능 추가 가능\n    };\n\n    const handleCancelPickUp = () => {\n        closeModal();\n        onCancelClick(reservationDetail.reservationId);\n    }\n    \n    const issuePageHandler = () => {\n        closeModal();\n        navigate('/customer/issue' ,{ state: { reservationDetail} });\n    }\n\n    let tag = '';\n    switch (reservationDetail.status) {\n        case 'CANCELED':\n            tag = (\n                <>\n                    <p>취소 시간:\n                        <span>\n                        {reservationDetail.cancelReservationAtF}\n                        </span>\n                    </p>\n                </>\n            );\n            break;\n        case 'RESERVED':\n            tag = (\n                <>\n                    <p className={styles.pickupTimeF}>픽업 마감 시간:\n                        <span>\n                            {reservationDetail.pickupTimeF}\n                        </span>\n                    </p>\n                </>\n            );\n            break;\n        case 'PICKEDUP':\n            tag = (\n                <>\n                    <p>픽업이 완료되었습니다.</p>\n                    <p>픽업 시간:\n                        <span>\n                        {reservationDetail.pickedUpAtF}\n                        </span>\n                    </p>\n                </>\n            );\n            break;\n        case 'NOSHOW':\n            tag = (\n                <>\n                    <p>픽업 마감 시간까지 픽업되지 않았습니다.</p>\n                    <p>픽업 마감 시간:\n                        <span>\n                        {reservationDetail.pickupTimeF}\n                    </span>\n                    </p>\n                </>\n            )\n            ;\n            break;\n        default:\n            tag = <div>No information available.</div>;\n            break;\n    }\n\n\n    return (\n        <>\n            <div className={styles.reservationDetailItem} data-reservation-id={reservationDetail.id}>\n                <div className={styles.imgSection}>\n                    <img\n                        className={styles.reservedProductImg}\n                        src={reservationDetail.productImg || DEFAULT_IMG}\n                        alt=\"상품 이미지\"\n                        onError={imgErrorHandler}\n                    />\n                    <img className={styles.reservedStoreImg}\n                         src={reservationDetail.storeImg || DEFAULT_IMG}\n                         alt=\"가게 이미지\"\n                         onError={imgErrorHandler}\n                    />\n                </div>\n                <div className={styles.reservationTextInfo}>\n                    <div>가게명:\n                        <span>\n                            {reservationDetail.storeName}\n                        </span>\n                    </div>\n                    <div>가게 주소:\n                        <a href=\"\">\n                            {reservationDetail.address}\n                        </a>\n                    </div>\n                    {/* 추후 지도 API로 변경 가능 클릭 시 해당 주소 네이버 지도로 이동*/}\n                    <div>예약한 시간:\n                        <span>\n                        {reservationDetail.reservationTimeF}\n                        </span>\n                    </div>\n                    {tag}\n                </div>\n                {reservationDetail.status === 'RESERVED' ?\n                    reservationDetail.paymentTime === null ?\n                            <>\n                                <p className={styles.btnDes}>결제가 아직 완료되지 않았어요!<br/>아래의 결제하기 버튼을 눌러서 결제를 완료해 주세요</p>\n                                <PaymentBtn storeInfo={reservationDetail}/>\n                            </>\n                        :\n                    <>\n                        {/*<p className={styles.btnDes}>가게에 도착해 스페셜 팩을 수령했다면 <br/> '픽업 확인' 버튼을 눌러주세요!</p>*/}\n                        {/*<button className={styles.pickupConfirmBtn} onClick={handleConfirmPickUp}>픽업 확인</button>*/}\n                        <p className={styles.btnDes}>예약을 취소하고 싶으시면 <br/> '예약 취소' 버튼을 눌러주세요!</p>\n                        <button className={styles.pickupCancelBtn} onClick={handleCancelPickUp}>예약 취소</button>\n                    </>\n\n                    : <></>}\n                {/*{reservationDetail.status === 'PICKEDUP' ?*/}\n                {/*    */}\n                {/*    <>*/}\n                {/*        <button className={styles.writeReview} >리뷰 작성</button>\n                {/*    </>*/}\n                {/*    : <></>*/}\n                {/*}*/}\n\n                <div onClick={issuePageHandler} className={styles.needHelp}>도움이 필요하신가요?</div>\n                {/* 추후 추가될 기능 문의하기 버튼 */}\n            </div>\n        </>\n    );\n};\n\nexport default CustomerReservationDetailModal;"],"names":["_ref","storeInfo","isShow","setIsShow","useState","paymentId","setPaymentId","isLoading","setIsLoading","closeModal","openModal","useModal","price","storeId","closeHandler","_jsxs","_Fragment","children","_jsx","className","styles","paymentBtn","onClick","async","tarId","concat","productId","Date","now","response","patchReservationFetch","reservationId","data","json","ok","alert","window","location","reload","e","console","error","SubModalPortal","onClose","PaymentRequestModal","storeName","reservationDetail","onPickupConfirm","onCancelClick","navigate","useNavigate","tag","status","cancelReservationAtF","pickupTimeF","pickedUpAtF","reservationDetailItem","id","imgSection","reservedProductImg","src","productImg","DEFAULT_IMG","alt","onError","imgErrorHandler","reservedStoreImg","storeImg","reservationTextInfo","href","address","reservationTimeF","paymentTime","btnDes","PaymentBtn","pickupCancelBtn","handleCancelPickUp","issuePageHandler","state","needHelp"],"sourceRoot":""}
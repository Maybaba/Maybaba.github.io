{"version":3,"file":"static/js/458.ac66f5cf.chunk.js","mappings":"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","sources":["webpack://foodietree_FE/./src/pages/store/StoreReservationFilterModal.module.scss?d1e5","pages/store/StoreReservationFilterModal.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"StoreReservationFilterModal_modalContent__6NN6U\",\"filterGroup\":\"StoreReservationFilterModal_filterGroup__TWVOn\",\"options\":\"StoreReservationFilterModal_options__jhRDe\",\"option\":\"StoreReservationFilterModal_option__1oDR5\",\"selected\":\"StoreReservationFilterModal_selected__tMciW\",\"dateRange\":\"StoreReservationFilterModal_dateRange__YJXQ4\",\"buttons\":\"StoreReservationFilterModal_buttons__wTt6D\",\"resetButton\":\"StoreReservationFilterModal_resetButton__4jeFO\",\"resetIcon\":\"StoreReservationFilterModal_resetIcon__Wikqv\",\"resetText\":\"StoreReservationFilterModal_resetText__9EEr4\",\"applyButton\":\"StoreReservationFilterModal_applyButton__7YLHH\"};","import React, { useState } from 'react';\nimport styles from './StoreReservationFilterModal.module.scss';\nimport { useModal } from \"../common/ModalProvider\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotateRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst StoreReservationFilterModal = ({ onApply, initialFilters }) => {\n    const { closeModal } = useModal();\n    const [startDate, setStartDate] = useState(initialFilters?.dateRange?.startDate || '');\n    const [endDate, setEndDate] = useState(initialFilters?.dateRange?.endDate || '');\n    const [status, setStatus] = useState(initialFilters?.status || []);\n\n    const handleStatusClick = (value) => {\n        setStatus((prev) =>\n            prev.includes(value) ? prev.filter((item) => item !== value) : [...prev, value]\n        );\n    };\n\n    const getStatusDisplayName = (status) => {\n        switch (status) {\n            case 'RESERVED':\n                return '진행 중';\n            case 'PICKEDUP':\n                return '픽업 완료';\n            case 'CANCELED':\n                return '취소';\n            case 'NOSHOW':\n                return '노쇼';\n            default:\n                return status;\n        }\n    };\n\n    const handleStartDateChange = (e) => {\n        const selectedStartDate = e.target.value;\n        if (endDate && new Date(selectedStartDate) > new Date(endDate)) {\n            alert(\"시작 날짜는 종료 날짜 이후 일 수 없습니다.\");\n        } else {\n            setStartDate(selectedStartDate);\n        }\n    };\n\n    const handleEndDateChange = (e) => {\n        const selectedEndDate = e.target.value;\n        if (startDate && new Date(selectedEndDate) < new Date(startDate)) {\n            alert(\"종료 날짜는 시작 날짜 이전 일 수 없습니다.\");\n        } else {\n            setEndDate(selectedEndDate);\n        }\n    };\n\n    const handleApply = () => {\n        onApply({ dateRange: { startDate, endDate }, status });\n        closeModal();\n    };\n\n    const handleReset = () => {\n        setStartDate('');\n        setEndDate('');\n        setStatus([]);\n    };\n\n    return (\n        <div className={styles.modalContent}>\n            <div className={styles.filterGroup}>\n                <label>조회 기간</label>\n                <div className={styles.dateRange}>\n                    <input\n                        type=\"date\"\n                        value={startDate}\n                        onChange={handleStartDateChange}\n                    />\n                    <span>~</span>\n                    <input\n                        type=\"date\"\n                        value={endDate}\n                        onChange={handleEndDateChange}\n                    />\n                </div>\n            </div>\n            <div className={styles.filterGroup}>\n                <label>주문 상태</label>\n                <div className={styles.options}>\n                    {['RESERVED', 'PICKEDUP', 'CANCELED', 'NOSHOW'].map(item => (\n                        <div\n                            key={item}\n                            className={`${styles.option} ${status.includes(item) ? styles.selected : ''}`}\n                            onClick={() => handleStatusClick(item)}\n                        >\n                            {getStatusDisplayName(item)}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className={styles.buttons}>\n                <div className={styles.resetButton} onClick={handleReset}>\n                    <FontAwesomeIcon icon={faRotateRight} className={styles.resetIcon}/>\n                    <div className={styles.resetText}>초기화</div>\n                </div>\n                <button className={styles.applyButton} onClick={handleApply}>필터 적용하기</button>\n            </div>\n        </div>\n    );\n};\n\nexport default StoreReservationFilterModal;"],"names":["_ref","_initialFilters$dateR","_initialFilters$dateR2","onApply","initialFilters","closeModal","useModal","startDate","setStartDate","useState","dateRange","endDate","setEndDate","status","setStatus","getStatusDisplayName","_jsxs","className","styles","children","_jsx","type","value","onChange","e","selectedStartDate","target","Date","alert","selectedEndDate","map","item","concat","includes","onClick","handleStatusClick","prev","filter","handleReset","FontAwesomeIcon","icon","faRotateRight","handleApply"],"sourceRoot":""}
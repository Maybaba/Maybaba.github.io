{"version":3,"file":"static/js/337.dd9d8eeb.chunk.js","mappings":"iKACA,QAAsC,iDAAtC,EAAqG,yCAArG,EAA0J,uCAA1J,EAA+M,yCAA/M,EAA0Q,6CAA1Q,EAAsU,0CAAtU,EAA4X,uCAA5X,EAAib,yCAAjb,EAA0e,2CAA1e,EAAsiB,4C,qBCItiB,MAyFA,EAzF4BA,IAAuB,IAAtB,eAACC,GAAeD,EACzC,MAAM,WAACE,IAAcC,EAAAA,EAAAA,KAMfC,EAAgBH,EAAeI,KAAKC,mBAAmB,QAAS,CAClEC,KAAM,UACNC,MAAO,OACPC,IAAK,YAgBHC,EAAQT,EAAeI,KAAKM,kBAAmB,IAAIC,MAAOD,eAEhE,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA2BC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAmBC,UAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKZ,OAETa,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAiBC,UAC7BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAmBC,SAC9Bf,EAAeiB,WACZD,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAuBC,SAAC,iFAExCH,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAH,SAAA,EACIH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAoBC,SAAA,EAChCH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,iBACDC,EAAAA,EAAAA,KAAA,QAAAD,SACCf,EAAemB,eAGpBP,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,6BACDC,EAAAA,EAAAA,KAAA,QAAAD,SACCf,EAAeoB,mBAIxBR,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,CAC5Bf,EAAeqB,QACZT,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,oCACDC,EAAAA,EAAAA,KAAA,QAAAD,SACCf,EAAesB,mBAIpBV,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,iDACDC,EAAAA,EAAAA,KAAA,QAAAD,SACCf,EAAeuB,oBAItBd,GAAST,EAAeqB,UACtBT,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,iDACDC,EAAAA,EAAAA,KAAA,QAAAD,SACCf,EAAewB,+BAQ5CZ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC7Bf,EAAeiB,YAAcjB,EAAeqB,SAC1CL,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAsBW,QAjEhCC,KACrB1B,EAAe0B,mBACfC,MAAM,wEACN1B,GAAY,EA8DmEc,SAAC,sDAEvEf,EAAeiB,YAAcjB,EAAeqB,SACzCL,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAuBW,QA9DhCG,KACtB5B,EAAe4B,oBACfD,MAAM,oFACN1B,GAAY,EA2DqEc,SAAC,sDAI5E,C,iBCzFd,IAAIc,EAA8B,iBAAVC,EAAAA,GAAsBA,EAAAA,GAAUA,EAAAA,EAAOC,SAAWA,QAAUD,EAAAA,EAEpFE,EAAOC,QAAUJ,C,iBCHjB,IAAIA,EAAaK,EAAQ,MAGrBC,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKL,SAAWA,QAAUK,KAGxEC,EAAOR,GAAcM,GAAYG,SAAS,cAATA,GAErCN,EAAOC,QAAUI,C,iBCRjBL,EAAOC,QAAU,CACf,IAAOC,EAAQ,M,iBCDjB,IAAIG,EAAOH,EAAQ,MAsBnBF,EAAOC,QAJG,WACR,OAAOI,EAAK1B,KAAK4B,KACnB,C","sources":["webpack://foodietree_FE/./src/pages/store/ScheduleDetailModal.module.scss?13e9","pages/store/ScheduleDetailModal.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/date.js","../node_modules/lodash/now.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"scheduleDetailModal\":\"ScheduleDetailModal_scheduleDetailModal__eaPYU\",\"modalHeader\":\"ScheduleDetailModal_modalHeader__kHmEp\",\"modalBody\":\"ScheduleDetailModal_modalBody__Eij5O\",\"holidayInfo\":\"ScheduleDetailModal_holidayInfo__IyVP5\",\"holidayTextInfo\":\"ScheduleDetailModal_holidayTextInfo__MqSR9\",\"scheduleInfo\":\"ScheduleDetailModal_scheduleInfo__vrOsM\",\"storeInfo\":\"ScheduleDetailModal_storeInfo__3aHCD\",\"modalFooter\":\"ScheduleDetailModal_modalFooter__GHD4-\",\"holidaySetBtn\":\"ScheduleDetailModal_holidaySetBtn__KzfEE\",\"holidayUndoBtn\":\"ScheduleDetailModal_holidayUndoBtn__rGslU\"};","import React from 'react';\nimport {useModal} from \"../common/ModalProvider\";\nimport styles from './ScheduleDetailModal.module.scss';\nimport {now} from \"lodash/date\";\n\nconst ScheduleDetailModal = ({scheduleDetail}) => {\n    const {closeModal} = useModal(); // ModalProvider에서 closeModal 함수 가져오기\n    // const { openTime, closeTime, totalProducts, soldProducts, isPast, isHoliday, handleSetHoliday, handleUndoHoliday } = scheduleDetail;\n\n    // 테스트용 dummy data\n    // const date = '2021-08-01';\n    // const isHoliday = false;\n    const formattedDate = scheduleDetail.date.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n\n    const handleSetHoliday = () => {\n        scheduleDetail.handleSetHoliday();\n        alert('휴무일로 지정되었습니다.');\n        closeModal();\n    }\n\n    const handleUndoHoliday = () => {\n        scheduleDetail.handleUndoHoliday();\n        alert('정상영업일로 변경되었습니다.');\n        closeModal();\n    }\n\n\n    const today = scheduleDetail.date.toDateString() === new Date().toDateString();\n\n    return (\n        <div className={styles.scheduleDetailModal}>\n            <div className={styles.modalHeader}>\n                <h2>{formattedDate}</h2>\n            </div>\n            <div className={styles.modalBody}>\n                <div className={styles.holidayInfo}>\n                    {scheduleDetail.isHoliday ? (\n                        <div className={styles.holidayTextInfo}>휴무일로 지정된 날짜입니다.</div>\n                    ) : (\n                        <>\n                            <div className={styles.scheduleInfo}>\n                                <div>오픈:\n                                    <span>\n                                    {scheduleDetail.openTime}\n                                    </span>\n                                </div>\n                                <div>픽업마감:\n                                    <span>\n                                    {scheduleDetail.closeTime}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className={styles.storeInfo}>\n                                {scheduleDetail.isPast ? (\n                                    <div>판매한 수량:\n                                        <span>\n                                        {scheduleDetail.soldProducts}\n                                        </span>\n                                    </div>\n                                ) : (\n                                    <div>업데이트 될 수량:\n                                        <span>\n                                        {scheduleDetail.totalProducts}\n                                        </span>\n                                    </div>\n                                )}\n                                {(today || scheduleDetail.isPast) && (\n                                    <div>업데이트 된 수량:\n                                        <span>\n                                        {scheduleDetail.updatedProduct}\n                                        </span>\n                                    </div>)}\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n            <div className={styles.modalFooter}>\n                {!scheduleDetail.isHoliday && !scheduleDetail.isPast && (\n                    <button className={styles.holidaySetBtn} onClick={handleSetHoliday}>휴무일로 지정하기</button>\n                )}\n                {scheduleDetail.isHoliday && !scheduleDetail.isPast && (\n                    <button className={styles.holidayUndoBtn} onClick={handleUndoHoliday}>휴무일 지정 취소</button>\n                )}\n                {/* <button className=\"action-button\" onClick={handleSetPickupTime}>픽업 시간 수정 하기</button> */}\n            </div>\n        </div>\n    );\n};\n\nexport default ScheduleDetailModal;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","module.exports = {\n  'now': require('./now')\n};\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n"],"names":["_ref","scheduleDetail","closeModal","useModal","formattedDate","date","toLocaleDateString","year","month","day","today","toDateString","Date","_jsxs","className","styles","children","_jsx","isHoliday","_Fragment","openTime","closeTime","isPast","soldProducts","totalProducts","updatedProduct","onClick","handleSetHoliday","alert","handleUndoHoliday","freeGlobal","global","Object","module","exports","require","freeSelf","self","root","Function","now"],"sourceRoot":""}